name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (without v prefix)'
        required: false
        default: ''
  workflow_call:
    inputs:
      version:
        description: 'Version to build (without v prefix)'
        type: string
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get release info and download files
        id: release
        run: |
          # Holen der Repository-Details
          REPO="simonrob/email-oauth2-proxy"
          
          # Version ermitteln (priorisiere Eingabe über workflow_dispatch/workflow_call)
          if [ -n "${{ inputs.version }}" ]; then
            RELEASE_VERSION="${{ inputs.version }}"
            RELEASE_TAG="v$RELEASE_VERSION"
            if [[ ! $RELEASE_TAG =~ ^v ]]; then
              RELEASE_TAG="v$RELEASE_TAG"
            fi
          elif [ "${{ github.event_name }}" == "release" ]; then
            # Wenn ein Release in diesem Repo erstellt wurde, nutze dessen Version
            RELEASE_TAG="${{ github.event.release.tag_name }}"
            RELEASE_VERSION=${RELEASE_TAG#v}
          else
            # Andernfalls nutze die neueste Version des Original-Repos
            RELEASE_TAG=$(curl -s https://api.github.com/repos/$REPO/releases/latest | jq -r '.tag_name')
            RELEASE_VERSION=${RELEASE_TAG#v}
          fi
          
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "Using version: ${RELEASE_VERSION} (tag: ${RELEASE_TAG})"
          
          # Download der wichtigsten Dateien
          curl -L -o emailproxy.py https://raw.githubusercontent.com/$REPO/$RELEASE_TAG/emailproxy.py
          curl -L -o requirements-core.txt https://raw.githubusercontent.com/$REPO/$RELEASE_TAG/requirements-core.txt
          curl -L -o emailproxy.config https://raw.githubusercontent.com/$REPO/$RELEASE_TAG/emailproxy.config
          
          # Überprüfung ob die Dateien heruntergeladen wurden
          ls -la

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            yggdrasilodin/email-oauth2-proxy:latest
            yggdrasilodin/email-oauth2-proxy:${{ env.RELEASE_VERSION }}
          labels: |
            org.opencontainers.image.version=${{ env.RELEASE_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/FoxTech-e-U/email-oauth2-proxy-docker
            org.opencontainers.image.title=Email OAuth 2.0 Proxy
            org.opencontainers.image.description=Dockerized Email OAuth 2.0 Proxy based on version ${{ env.RELEASE_VERSION }}
