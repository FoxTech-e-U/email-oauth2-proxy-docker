name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download required files from original repository
        run: |
          # Holen der Repository-Details
          REPO="simonrob/email-oauth2-proxy"
          
          # Bei einem Release den entsprechenden Tag verwenden, sonst den neuesten
          if [ "${{ github.event_name }}" == "release" ]; then
            RELEASE_TAG=${{ github.event.release.tag_name }}
          else
            RELEASE_TAG=$(curl -s https://api.github.com/repos/$REPO/releases/latest | jq -r '.tag_name')
          fi
          
          echo "Building for release: $RELEASE_TAG"
          
          # Download der wichtigsten Dateien
          curl -L -o emailproxy.py https://raw.githubusercontent.com/$REPO/$RELEASE_TAG/emailproxy.py
          curl -L -o requirements-core.txt https://raw.githubusercontent.com/$REPO/$RELEASE_TAG/requirements-core.txt
          curl -L -o emailproxy.config https://raw.githubusercontent.com/$REPO/$RELEASE_TAG/emailproxy.config
          
          # Überprüfung ob die Dateien heruntergeladen wurden
          ls -la

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: yggdrasilodin/email-oauth2-proxy
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
